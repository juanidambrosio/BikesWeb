{"Name":"Card.io for iOS","Id":3094,"Alias":"cardioios","Description":"Card.io is a library for iOS and Android that can scan credit card details in from the device\u0027s camera similar to a barcode scanner.  Card.io makes scanning and entering Credit Card information simple.\n\n## Features\n \n - **Live Camera Card Scanning** - Quick and simple integration.  Get up and running in 5 minutes.\n - **Optional Manual Entry** - Users can choose to type their credit cards in.  Card.io provides a slick interface for manual card entry.\n - **Secure** - No credit card information is stored or transmitted.\n - **Free** - SDK\u0027s are free for both Android and iOS.\n \n\n## Learn More\nLearn more about Card.io by visiting http://www.card.io","Version":"5.4.1.0","Summary":"Credit card scanning for mobile apps","QuickStart":"## Adding card.io to your iOS app\n\nThe most simple way to integrate card.io into your iOS app is to use the `CardIOPaymentViewController` just as you would any other UIViewController.  You will need to pass in an instance of `ICardIOPaymentViewControllerDelegate` to the constructor so you can handle when a card is scanned, or the user has cancelled scanning.\n\n```\n// Create and Show the View Controller\nvar paymentViewController = new CardIOPaymentViewController (this);\n\n// Display the card.io interface\nPresentViewController(paymentViewController, true);\n```\n\nYou can implement `ICardIOPaymentViewControllerDelegate` to capture the results:\n\n```\npublic void UserDidCancelPaymentViewController (CardIOPaymentViewController paymentViewController)\n{\n    Console.WriteLine(\"Scanning Canceled!\");\n}\npublic void UserDidProvideCreditCardInfo (CreditCardInfo cardInfo, CardIOPaymentViewController paymentViewController)\n{\n    if (cardInfo == null) {\n        Console.WriteLine(\"Scanning Canceled!\");\n    } else {\n        Console.WriteLine(\"Card Scanned: \" + cardInfo.CardNumber);\n    }\t\n\n    paymentViewController.DismissViewController(true, null);        \n}\n```\n\n### iOS 10+ Requires NSCameraUsageDescription\n\nStarting in iOS 10, Apple requires that if your app wants to access the camera, your `Info.plist` must specify the reason you wish to access it, which will be displayed to the user when they are prompted to allow or deny your app permission to use the camera.\n\nThis means your `Info.plist` file should contain a string item with a key of `NSCameraUsageDescription` and a value containing a description of why you want to use the camera, to show the user.\n\n","Hash":"fa2103736b64adafa4fdd5c92a470472","TargetPlatforms":["ios","ios-unified"],"TrialHash":null}